server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name yourthoughts.me;

#    ssl_certificate /key/fullchain1.pem;
#    ssl_certificate_key /key/privkey1.pem;
    ssl_protocols TLSv1.2 TLSv1.3;

    location /api {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_pass http://backend:8000/api;
        tcp_nodelay on;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }
    location / {
      proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_pass http://frontend;
        tcp_nodelay on;
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
    }

}


server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name yourthoughts.me;

# How I did it:
# 1. I installed required stuff for letsencrypt
# sudo amazon-linux-extras install epel -y
# sudo yum install certbot python3-certbot-nginx
#
# 2. I stopped things running on port 80
# docker compose -f ~/team-project-deployment/docker-compose.yml down
#
# 3. I start nginx (this is because I used nginx on docker, so I need to enable host nginx)
# sudo systemctl start nginx
#
# 4. I got the certificate
# sudo certbot certonly --nginx
#
# 5. I stopped host nginx
# sudo systemctl stop nginx
#
# 6. Now, the certificate are linked in /etc/letsencrypt/live/askit.bham.team
# but is actually in /etc/letsencrypt/archive/askit.bham.team
# so I linked them to /letsencrypt_key
#       - /etc/letsencrypt/archive/askit.bham.team:/letsencrypt_key
# in docker-compose.yml
#
# 7. I linked them here in nginx.conf
# this certificate is for askit.bham.team
# and will expire 3 months later
# so at that time, need to renew it
# remember to stop nginx docker, and start nginx host before renewing
# sudo certbot renew --nginx (I think)

;     ssl_certificate /letsencrypt_key/fullchain1.pem;
;     ssl_certificate_key /letsencrypt_key/privkey1.pem;
;     ssl_protocols TLSv1.2 TLSv1.3;
;
;     location /api {
;         proxy_http_version 1.1;
;         proxy_set_header Upgrade $http_upgrade;
;         proxy_set_header Connection "upgrade";
;         proxy_set_header Host $host;
;         proxy_set_header X-Real-IP $remote_addr;
;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
;         proxy_set_header X-Forwarded-Proto $scheme;
;         proxy_set_header X-Forwarded-Host $host;
;         proxy_set_header X-Forwarded-Port $server_port;
;         proxy_pass http://backend:8000;
;         tcp_nodelay on;
;         proxy_read_timeout 300;
;         proxy_connect_timeout 300;
;         proxy_send_timeout 300;
;     }
;     location / {
;       proxy_http_version 1.1;
;         proxy_set_header Upgrade $http_upgrade;
;         proxy_set_header Connection "upgrade";
;         proxy_set_header Host $host;
;         proxy_set_header X-Real-IP $remote_addr;
;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
;         proxy_set_header X-Forwarded-Proto $scheme;
;         proxy_set_header X-Forwarded-Host $host;
;         proxy_set_header X-Forwarded-Port $server_port;
;         proxy_pass http://frontend;
;         tcp_nodelay on;
;         proxy_read_timeout 300;
;         proxy_connect_timeout 300;
;         proxy_send_timeout 300;
;     }
;
; }
;
;
; server {
;     listen       80;
;     listen  [::]:80;
;
;     server_name  teamai55-22.bham.team, askit.bham.team;
;
;     if ($host = teamai55-22.bham.team) {
;         return 301 https://$host$request_uri;
;     }
;
;     if ($host = askit.bham.team) {
;         return 301 https://$host$request_uri;
;     }
;
;     return 404;
; }